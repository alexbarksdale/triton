{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,ADOA,ICPA,ADOA,IAAA,ECPA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA;ACLA,ADKA,ICLM,IAAI,GAAG,CDKb,GCLiB,MAAA,CAAA,IAAJ,CAAS;AAAE,ADQpB,ECRoB,IAAI,EAAE,GDQ1B,GCRkB,CDQlB,CAAoB,IAApB,EAAmC;ACRD,ADQd,ECRc,GAAG,EAAE,EDQnB,IAAA,GAAA,IAAA;ACRF,ADMlB,CCNS,CAAb,ODMI,MAAA,GAAwC,EAAxC;ACJJ,ADM2C,ICNvC,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AACd,EAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACH,ADMG,CCRJ,CDQI,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACLxB,ADMQ,ICNJ,CAAC,MDMU,CCNf,CAAa,GDMO,IAAL,CCNf,ADMyB,QAAV,CAAP;ACJR,ADKK,GAFD,ICHG,CAAC,GAAR,CAAY,IAAZ;;ADOI,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;AACjB,IAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;AACH,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACpC;AACA,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACH,GALD;;AAOA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACrB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AAExC,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAS;AAAK,aAAA,QAAQ,EAAR;AAAU,KAAzC;AACH,GAND;;AAOJ,SAAA,IAAA;AA3BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n    name?: string; // ? = optional\n    age?: number;\n}\n\ntype Callback = () => void;\n\nexport class User {\n    events: { [key: string]: Callback[] } = {};\n\n    constructor(private data: UserProps) {}\n\n    get(propName: string): string | number {\n        return this.data[propName];\n    }\n\n    set(update: UserProps): void {\n        Object.assign(this.data, update);\n    }\n\n    on(eventName: string, callback: Callback): void {\n        // if the event at eventName doesn't exist handlers = []\n        const handlers = this.events[eventName] || [];\n        handlers.push(callback);\n        this.events[eventName] = handlers;\n    }\n\n    trigger(eventName: string): void {\n        const handlers = this.events[eventName];\n\n        if (!handlers || handlers.length === 0) return;\n\n        handlers.forEach((callback) => callback());\n    }\n}\n","import { User } from './models/User';\n\nconst user = new User({ name: 'User', age: 20 });\n\nuser.on('change', () => {\n    console.log('Fired');\n});\nuser.trigger('change');\n\nconsole.log(user);\n"]}